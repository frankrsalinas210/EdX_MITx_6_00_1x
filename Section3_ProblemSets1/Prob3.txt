Problem 3

Assume 's' is a string of lower case characters.

Write a program that prints the longest substring of 's' in which the letters occur in alphabetical order. For example, if 's = 'azcbobobegghakl'', then your program should print

	Longest substring in alphabetical order is: beggh
In the case of ties, print the first substring. For example, if 's = 'abcbcd'', then your program should print

	Longest substring in alphabetical order is: abc

	Note: This problem may be challenging. We encourage you to work smart. If you've spent more than a few hours on this problem, we suggest that you move on to a different part of the course. If you have time, come back to this problem after you've had a break and cleared your head.

Assuing that I am being feed differnt 's'

A: 	string = s[0]
	i = 0
	while i < len(s):# < (len(s)-2):
		j = len(s)
		while j > i:
			temp = s[i:j]
			if temp == ''.join(sorted(temp)):
				if len(temp) > len(string):
					string = temp
			j -= 1
		s = s[i+1:]
	print ("Longest substring in alphabetical order is:", string)